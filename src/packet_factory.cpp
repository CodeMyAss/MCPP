#include <packet.hpp>


#define p_f(x) case x:return make<x>();


namespace MCPP {
	
	
	PacketFactory::PacketFactory () noexcept {	}


	PacketFactory::~PacketFactory () noexcept {	}
	
	
	template <Byte i>
	inline typename std::enable_if<
		std::is_base_of<
			PacketFactory,
			PacketTypeMap<i>
		>::value,
		PacketFactory *
	>::type make () {
	
		return new PacketTypeMap<i>();
	
	}
	
	
	template <Byte i>
	constexpr inline typename std::enable_if<
		!std::is_base_of<
			PacketFactory,
			PacketTypeMap<i>
		>::value,
		PacketFactory *
	>::type make () noexcept {
	
		return nullptr;
	
	}
	
	
	PacketFactory * PacketFactory::Make (Byte type) {
	
		switch (type) {
		
		
			p_f(0x00)
			p_f(0x01)
			p_f(0x02)
			p_f(0x03)
			p_f(0x04)
			p_f(0x05)
			p_f(0x06)
			p_f(0x07)
			p_f(0x08)
			p_f(0x09)
			p_f(0x0A)
			p_f(0x0B)
			p_f(0x0C)
			p_f(0x0D)
			p_f(0x0E)
			p_f(0x0F)
			p_f(0x10)
			p_f(0x11)
			p_f(0x12)
			p_f(0x13)
			p_f(0x14)
			p_f(0x15)
			p_f(0x16)
			p_f(0x17)
			p_f(0x18)
			p_f(0x19)
			p_f(0x1A)
			p_f(0x1B)
			p_f(0x1C)
			p_f(0x1D)
			p_f(0x1E)
			p_f(0x1F)
			p_f(0x20)
			p_f(0x21)
			p_f(0x22)
			p_f(0x23)
			p_f(0x24)
			p_f(0x25)
			p_f(0x26)
			p_f(0x27)
			p_f(0x28)
			p_f(0x29)
			p_f(0x2A)
			p_f(0x2B)
			p_f(0x2C)
			p_f(0x2D)
			p_f(0x2E)
			p_f(0x2F)
			p_f(0x30)
			p_f(0x31)
			p_f(0x32)
			p_f(0x33)
			p_f(0x34)
			p_f(0x35)
			p_f(0x36)
			p_f(0x37)
			p_f(0x38)
			p_f(0x39)
			p_f(0x3A)
			p_f(0x3B)
			p_f(0x3C)
			p_f(0x3D)
			p_f(0x3E)
			p_f(0x3F)
			p_f(0x40)
			p_f(0x41)
			p_f(0x42)
			p_f(0x43)
			p_f(0x44)
			p_f(0x45)
			p_f(0x46)
			p_f(0x47)
			p_f(0x48)
			p_f(0x49)
			p_f(0x4A)
			p_f(0x4B)
			p_f(0x4C)
			p_f(0x4D)
			p_f(0x4E)
			p_f(0x4F)
			p_f(0x50)
			p_f(0x51)
			p_f(0x52)
			p_f(0x53)
			p_f(0x54)
			p_f(0x55)
			p_f(0x56)
			p_f(0x57)
			p_f(0x58)
			p_f(0x59)
			p_f(0x5A)
			p_f(0x5B)
			p_f(0x5C)
			p_f(0x5D)
			p_f(0x5E)
			p_f(0x5F)
			p_f(0x60)
			p_f(0x61)
			p_f(0x62)
			p_f(0x63)
			p_f(0x64)
			p_f(0x65)
			p_f(0x66)
			p_f(0x67)
			p_f(0x68)
			p_f(0x69)
			p_f(0x6A)
			p_f(0x6B)
			p_f(0x6C)
			p_f(0x6D)
			p_f(0x6E)
			p_f(0x6F)
			p_f(0x70)
			p_f(0x71)
			p_f(0x72)
			p_f(0x73)
			p_f(0x74)
			p_f(0x75)
			p_f(0x76)
			p_f(0x77)
			p_f(0x78)
			p_f(0x79)
			p_f(0x7A)
			p_f(0x7B)
			p_f(0x7C)
			p_f(0x7D)
			p_f(0x7E)
			p_f(0x7F)
			p_f(0x80)
			p_f(0x81)
			p_f(0x82)
			p_f(0x83)
			p_f(0x84)
			p_f(0x85)
			p_f(0x86)
			p_f(0x87)
			p_f(0x88)
			p_f(0x89)
			p_f(0x8A)
			p_f(0x8B)
			p_f(0x8C)
			p_f(0x8D)
			p_f(0x8E)
			p_f(0x8F)
			p_f(0x90)
			p_f(0x91)
			p_f(0x92)
			p_f(0x93)
			p_f(0x94)
			p_f(0x95)
			p_f(0x96)
			p_f(0x97)
			p_f(0x98)
			p_f(0x99)
			p_f(0x9A)
			p_f(0x9B)
			p_f(0x9C)
			p_f(0x9D)
			p_f(0x9E)
			p_f(0x9F)
			p_f(0xA0)
			p_f(0xA1)
			p_f(0xA2)
			p_f(0xA3)
			p_f(0xA4)
			p_f(0xA5)
			p_f(0xA6)
			p_f(0xA7)
			p_f(0xA8)
			p_f(0xA9)
			p_f(0xAA)
			p_f(0xAB)
			p_f(0xAC)
			p_f(0xAD)
			p_f(0xAE)
			p_f(0xAF)
			p_f(0xB0)
			p_f(0xB1)
			p_f(0xB2)
			p_f(0xB3)
			p_f(0xB4)
			p_f(0xB5)
			p_f(0xB6)
			p_f(0xB7)
			p_f(0xB8)
			p_f(0xB9)
			p_f(0xBA)
			p_f(0xBB)
			p_f(0xBC)
			p_f(0xBD)
			p_f(0xBE)
			p_f(0xBF)
			p_f(0xC0)
			p_f(0xC1)
			p_f(0xC2)
			p_f(0xC3)
			p_f(0xC4)
			p_f(0xC5)
			p_f(0xC6)
			p_f(0xC7)
			p_f(0xC8)
			p_f(0xC9)
			p_f(0xCA)
			p_f(0xCB)
			p_f(0xCC)
			p_f(0xCD)
			p_f(0xCE)
			p_f(0xCF)
			p_f(0xD0)
			p_f(0xD1)
			p_f(0xD2)
			p_f(0xD3)
			p_f(0xD4)
			p_f(0xD5)
			p_f(0xD6)
			p_f(0xD7)
			p_f(0xD8)
			p_f(0xD9)
			p_f(0xDA)
			p_f(0xDB)
			p_f(0xDC)
			p_f(0xDD)
			p_f(0xDE)
			p_f(0xDF)
			p_f(0xE0)
			p_f(0xE1)
			p_f(0xE2)
			p_f(0xE3)
			p_f(0xE4)
			p_f(0xE5)
			p_f(0xE6)
			p_f(0xE7)
			p_f(0xE8)
			p_f(0xE9)
			p_f(0xEA)
			p_f(0xEB)
			p_f(0xEC)
			p_f(0xED)
			p_f(0xEE)
			p_f(0xEF)
			p_f(0xF0)
			p_f(0xF1)
			p_f(0xF2)
			p_f(0xF3)
			p_f(0xF4)
			p_f(0xF5)
			p_f(0xF6)
			p_f(0xF7)
			p_f(0xF8)
			p_f(0xF9)
			p_f(0xFA)
			p_f(0xFB)
			p_f(0xFC)
			p_f(0xFD)
			p_f(0xFE)
			p_f(0xFF)
		
		
		}
	
	}
	
	
}
